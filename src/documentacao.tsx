

// ARQUIVO DE LEITURA REFERENTE A DOCUMENTAÇÃO DO PROJETO E PASSO A PASSO

// CRIACAO DO PROJETO USANDO VITE PARA USAR REACT.JS COM TYPESCRIPT

// LIMPANDO TODOS OS CAMPOS PARA TIRAR O PADRÃO DO VITE E INICIAR O PROJETO COM AS PAGINAS ZERADAS

// ADICIONANDO UNICA IMAGEM DO PROJETO NA PASTA ASSETS

// INSTALAR A BIBLIOTECA REACT-ROUTER     COMANDO PARA INSTALACAO É    npm install react-router-dom

// CRIAR PASTA PAGES

// DENTRO DA PAGINA PAGES CRIAR A PAGINA HOME JÁ COM SEU CSS MAS USAR HOME.MODULE.CSS PARA QUE O CSS NÃO VAZE PELA APLICAÇÃO

// DENTRO DA PAGINA PAGES CRIAR A PAGINA DETAIL JÁ COM SEU CSS MAS USAR DETAIL.MODULE.CSS PARA QUE O CSS NÃO VAZE PELA APLICAÇÃO

// DENTRO DA PAGINA PAGES CRIAR A PAGINA NOTFOUND(NOSSA PAGINA DE ERRO) JÁ COM SEU CSS MAS USAR NOTFOUND.MODULE.CSS PARA QUE O CSS NÃO VAZE PELA APLICAÇÃO

// DENTRO DE SRC CRIAR COMPONENTE DE ROTA SE CHAMARA ROUTES NELE FICARA TODA ESTRUTURA DE ROTAS

// DENTRO DO COMPONENT ROUTES IMPORTA-SE TODAS AS PAGINAS E DENTRO DE ROUTER QUE É O COMPONENTE DE ROTA SE DÁ A ROTA DE CADA UMA DAS PAGINAS

// EM APP.TSX IMPORTE ROUTERPROVIDER DE REACT-ROUTER-DOM E ROUTER(NOSSA ROTA CRIADA EM ROUTES) E ADICIONE <RouterProvider router={router}/>  DENTRO DO RETURN
// PARA QUE RENDERIZE AS ROTAS COMO FOI CONFIGURADO LA EM ROUTES

// DENTRO DE SRC CRIAR PASTA COMPONENT E DENTRO DE PASTA COMPONENT CRIAR LAYOUT NESTE LAYOUT VAI TER INDICAR A ESTRUTURA DAS PAGINAS NO CASO TERÁ UM 
// HEADER(SERA RENDERIZADO EM TODAS AS PAGINAS)ACIMA E OUTLET ABAIXO O OUTLET SERÁ A ESTRUTURA DA PAGINA 

// DEPOIS DE CRIAR LAYOUT E ESTRUTURA-LO ADICIONAR EM ROUTES O ELEMENT COM O COMPONENT LAYOUT

// CRIAR EM COMPONENTS O COMPONENT HEADER JA COM SEU CSS.MODULE E ADICIONAR LA EM LAYOUT

// CRIAR ESTRUTURA DE HEADER E DEPOIS ESTILIZA-LA COMO DESEJAR

// CRIAR ESTRUTURA DE HOME CRIANDO ESTRUTURA DE FORMULARIO COM 1 INPUT E 1 BOTAO PARA FAZER O SEARCH

// DEPOIS DE FAZER O SEARCH FAZER A TABELA QUE POSTERIORMENTE IRA RECEBER OS DADOS DA API ESSA TABELA INICIALMENTE RECEBE DADOS FIXOS, ESSA TABELA  TERA  3 DADOS THEAD E  3 DADOS TBODY 

// ESTILIZAR A TABELA JA FAZER A RESPONSIVIDADE

// ACESSAR COINLIB.IO PEGAR A CHAVE PARA PODER FAZER AS REQUISIÇÕES

// USANDO USEEFFECT CRIE A REQUISICAO NESSA REQUISICA QUE É UMA PROMISSE FAÇA USO DO THEN(DEU CERTO) E DO CATCH(DEU ERRO)

// CRIE UMA STATE E JOGO OS DADOS DA REQUISICAO  NESTA STATE(COMO ESTA USANDO TYPESCRIPT FAÇA UMA INTERFACE PARA TIPAR A STATE E ORGANIZAR OS DADOS QUE VAI RECEBER DA API) 

// NESSE CASO EM ESPECIAL PRECISA TRANFORMAR ALGUNS DADOS RECEBIDOS QUE SÃO STRINGS PARA NUMBER DENTRO DE THEN PEGUE OS DADOS E CRIE NOVAS PROPRIEDADES EM NUMBER EM CONJUNTO COM OS DADOS QUE JA EXISTEM
// E CRIE UMA NOVA VARIAVEL COM OS DADOS NOVOS E TODO RESTO, DEPOIS JOGUE ESTA VARIAVEL DENTRO DA STATE QUE IRA SER RENDERIZADA 

// DEPOIS DE TESTADO O RETORNO DA REQUISICAO HORA DE RENDERIZA-LA, PEGUE A STATE QUE FICA OS DADOS E FACA UM MAP DENTRO DESTE MAP ADICIONE TODA A ESTRUTURA JA FEITA NO CASOD ESTE PROJETO O CORPO DA TABELA
// E DENTRO DOS VALORES FIXOS ADICIONE OS VALORES DINAMICOS 

// AGORA TRABALHAR O SEARCH CRIAR A FUNCAO LINKADA AO INPUT, CRIE UMA STATE QUE RECEBERA OS DADOS DO INPUT, E DENTRO DA FUNCAO ESTABELECA O DADO DIGITADO CONCATENADO A UMA ROTA EXEMPLO navigate(`/detail/${valorInput}`)

// FEITO A ROTA HORA DE TRABALHAR NA PAGE DETAIL QUE VAI CONTER OS DADOS DA MOEDA ESCOLHIDA ASSIM COMO A HOME CRIAR O TSX INTEIRO COM OS VALORES FIXOS E ESTILIZA-LO

// EM DETAIL USE USEPARAMS PARA ESTABELECER ROTA DINAMICA

// EM DETAIL CRIE UM USEEFFECT QUE FARA A REQUISICAO DA MOEDA DESEJADA E CRIE ASSIM COM A DE HOME A FORMATACAO DOS DADOS E JOGA EM UMA STATE PARA DEPOIS RENDERIZA-LA, LEMBRAR DE ALTERAR A URL
// SEGUE UM EXEMPLO https://sujeitoprogramador.com/api-cripto/coin/?key=f4020889af14ea44&pref=BRL&symbol=${cripto} 

// DEPOIS DE FAZER A REQUISICAO ADICIONE UMA CONDICIONAL DE LOADING SE LOADING ESTIVER TRUE(CARREGANDO OS DADOS) CRIE UM LOADING PARA USUARIO VER QUE ETSA EM LOADING SENÃO REDERIZE A PAGINA NORMALMENTE,

// ADICIONE OS DADOS DA REQUISIÇÃO NO LUGAR DOS DADOS FISICOS 

